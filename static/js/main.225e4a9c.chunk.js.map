{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/default.jpg","components/Profile/Profile.jsx","components/Statistics/getColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","defaultImage","alt","width","height","label","quantity","followers","views","likes","getColor","colorArray","i","color","Math","round","random","push","Statistics","title","statistics","statList","map","elem","array","item","style","backgroundColor","length","percentage","id","FriendListItem","isOnline","status","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","itemType","type","itemAmount","amount","itemCurrency","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCAvSD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,qPCAvND,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,SAAW,qCAAqC,WAAa,uCAAuC,aAAe,2C,iBCAzMD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,iC,iBCAvGD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,m8FCDhD,MAA0B,oC,OC8C1BC,MA1Cf,YAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC9C,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBACEC,IAAG,OAAEN,QAAF,IAAEA,IAAUO,EACfC,IAAI,gHACJN,UAAWC,IAAEH,OACbS,MAAM,MACNC,OAAO,QAET,mBAAGR,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,+BACE,sBAAMC,UAAWC,IAAEQ,MAAnB,uBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8BX,EAAMY,eAEtC,+BACE,sBAAMX,UAAWC,IAAEQ,MAAnB,mBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8BX,EAAMa,WAEtC,+BACE,sBAAMZ,UAAWC,IAAEQ,MAAnB,mBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8BX,EAAMc,kB,gBCpB/BC,MAXf,WAGE,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9BL,EAAWM,KAAKJ,GAGlB,MAAM,OAAN,OAAcF,EAAd,MCmCaO,MAvCf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOxB,EAAS,EAATA,MAC3B,OACE,0BAASC,UAAWC,IAAEuB,WAAtB,UACGD,GAAS,oBAAIvB,UAAWC,IAAEsB,MAAjB,SAAyBA,IAEnC,oBAAIvB,UAAWC,IAAEwB,SAAjB,SACG1B,EAAM2B,KAAI,SAACC,EAAMX,EAAGY,GAEnB,OACE,qBACE5B,UAAWC,IAAE4B,KAEbC,MAAO,CAELC,gBAAgB,GAAD,OAAKjB,KACpBP,MAAO,IAAMqB,EAAMI,OAAS,KANhC,UASE,sBAAMhC,UAAWC,IAAEQ,MAAnB,SAA2BkB,EAAKlB,QAChC,uBAAMT,UAAWC,IAAEgC,WAAnB,UAAgCN,EAAKM,WAArC,SARKN,EAAKO,a,gBCOTC,MAnBf,YAAqD,IAA3BrC,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,KAAMyC,EAAY,EAAZA,SACtC,OACE,qCACE,sBACEpC,UAAWC,IAAEoC,OACbP,MAAO,CAAEC,gBAAiBK,EAAW,QAAU,SAEjD,qBAAKpC,UAAWC,IAAEH,OAAQM,IAAKN,EAAQQ,IAAI,SAASC,MAAM,OAC1D,mBAAGP,UAAWC,IAAEN,KAAhB,SAAuBA,Q,gBCoBd2C,MA3Bf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAIvC,UAAWC,IAAEuC,WAAjB,SACGD,EAAQb,KAAI,SAAAG,GAAI,OACf,oBAAI7B,UAAWC,IAAE4B,KAAjB,SACE,cAAC,EAAD,CACE/B,OAAQ+B,EAAK/B,OACbH,KAAMkC,EAAKlC,KACXyC,SAAUP,EAAKO,YAJSP,EAAKK,U,gBC8B1BO,MAnCf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,wBAAO1C,UAAWC,IAAE0C,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMhB,KAAI,SAAAG,GAAI,OACb,+BACE,oBAAI7B,UAAWC,IAAE2C,SAAjB,SAA4Bf,EAAKgB,OACjC,oBAAI7C,UAAWC,IAAE6C,WAAjB,SAA8BjB,EAAKkB,SACnC,oBAAI/C,UAAWC,IAAE+C,aAAjB,SAAgCnB,EAAKoB,aAH9BpB,EAAKK,a,oCCgBTgB,MAtBf,WACE,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,CACEL,KAAMwD,EAAKxD,KACXC,IAAKuD,EAAKvD,IACVC,SAAUsD,EAAKtD,SACfC,OAAQqD,EAAKrD,OACbC,MAAOoD,EAAKpD,QAGd,cAAC,EAAD,CAAYwB,MAAM,eAAexB,MAAOqD,IAExC,cAAC,EAAD,CAAYrD,MAAOqD,IAEnB,cAAC,EAAD,CAAYb,QAASA,IAErB,cAAC,EAAD,CAAoBG,MAAOW,QCtBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.225e4a9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ukGc\",\"description\":\"Profile_description__Mu0j3\",\"avatar\":\"Profile_avatar__1uzYH\",\"name\":\"Profile_name__2eYzd\",\"tag\":\"Profile_tag__eRZh2\",\"location\":\"Profile_location__tcb63\",\"stats\":\"Profile_stats__3wF6y\",\"label\":\"Profile_label__iPWtC\",\"quantity\":\"Profile_quantity__yBUcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3R-pW\",\"title\":\"Statistics_title__3zGeR\",\"statList\":\"Statistics_statList__2QD73\",\"item\":\"Statistics_item__3Q9K3\",\"label\":\"Statistics_label__1D11Q\",\"percentage\":\"Statistics_percentage__ZI_Xp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__BZJEw\",\"itemType\":\"TransactionHistory_itemType__19XAy\",\"itemAmount\":\"TransactionHistory_itemAmount__35430\",\"itemCurrency\":\"TransactionHistory_itemCurrency__1ARAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"FriendListItem_name__39wA-\",\"status\":\"FriendListItem_status__3-fGf\",\"avatar\":\"FriendListItem_avatar__aqte6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__1sg8m\",\"friendList\":\"FriendList_friendList__1IM3y\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport defaultImage from './default.jpg';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar ?? defaultImage}\n          alt=\"Аватар пользователя\"\n          className={s.avatar}\n          width=\"150\"\n          height=\"150\"\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\n};\n\nexport default Profile;\n","function getColor() {\n  const colorArray = [];\n\n  for (let i = 0; i < 3; i++) {\n    const color = Math.round(Math.random() * 255);\n    colorArray.push(color);\n  }\n  // return colorArray;\n  return `rgb(${colorArray})`;\n}\n\nexport default getColor;\n// export default `rgb(${getColor()})`\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport getColor from './getColor';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map((elem, i, array) => {\n          // const color = getColor();\n          return (\n            <li\n              className={s.item}\n              key={elem.id}\n              style={{\n                // backgroundColor: `rgb(${color})`,\n                backgroundColor: `${getColor()}`,\n                width: 100 / array.length + '%',\n              }}\n            >\n              <span className={s.label}>{elem.label}</span>\n              <span className={s.percentage}>{elem.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <>\n      <span\n        className={s.status}\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n      ></span>\n      <img className={s.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(item => (\n        <li className={s.item} key={item.id}>\n          <FriendListItem\n            avatar={item.avatar}\n            name={item.name}\n            isOnline={item.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>TYPE</th>\n          <th>AMOUNT</th>\n          <th>CURRENCY</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td className={s.itemType}>{item.type}</td>\n            <td className={s.itemAmount}>{item.amount}</td>\n            <td className={s.itemCurrency}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport Friendlist from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <Statistics stats={statisticalData} />\n\n      <Friendlist friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}