{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/default.jpg","components/Profile/Profile.jsx","components/Statistics/getColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","defaultImage","alt","width","height","label","quantity","followers","views","likes","getColor","colorArray","i","color","Math","round","random","push","Statistics","title","statistics","statList","map","elem","array","item","style","backgroundColor","length","percentage","id","FriendListItem","isOnline","status","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","itemType","type","itemAmount","amount","itemCurrency","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0105aa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__jMmVX\",\"description\":\"Profile_description__2bhEP\",\"avatar\":\"Profile_avatar__3gxiJ\",\"name\":\"Profile_name__3EV0q\",\"tag\":\"Profile_tag__22mLz\",\"location\":\"Profile_location__3Lug1\",\"stats\":\"Profile_stats__3JS7E\",\"label\":\"Profile_label__1h_Fo\",\"quantity\":\"Profile_quantity__2838v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__wMNNw\",\"title\":\"Statistics_title__3gIAz\",\"statList\":\"Statistics_statList__1v1dZ\",\"item\":\"Statistics_item__FCrxb\",\"label\":\"Statistics_label__2rFpk\",\"percentage\":\"Statistics_percentage__3C_9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1aazR\",\"itemType\":\"TransactionHistory_itemType__3flGt\",\"itemAmount\":\"TransactionHistory_itemAmount__1MN_S\",\"itemCurrency\":\"TransactionHistory_itemCurrency__2Dhme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"FriendListItem_name__10TcB\",\"status\":\"FriendListItem_status__2ibfa\",\"avatar\":\"FriendListItem_avatar__3nKca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__1eTEr\",\"friendList\":\"FriendList_friendList__1KhKr\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\nimport defaultImage from './default.jpg'\r\n\r\n\r\nfunction Profile({name, tag, location, avatar, stats}) {\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.description}>\r\n                <img\r\n                    src={avatar ?? defaultImage}\r\n                    alt=\"Аватар пользователя\"\r\n                    className={s.avatar}\r\n                    width=\"150\"\r\n                    height=\"150\"\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={s.stats}>\r\n                <li>\r\n                    <span className={s.label}>Followers</span>\r\n                    <span className={s.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={s.label}>Views</span>\r\n                    <span className={s.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={s.label}>Likes</span>\r\n                    <span className={s.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n}\r\n\r\nexport default Profile;\r\n","function getColor() {\r\n    const colorArray = [];\r\n\r\n    for (let i = 0; i < 3; i++){\r\n        const color = Math.round(Math.random() * 255);\r\n        colorArray.push(color);\r\n    }\r\n    return colorArray;\r\n}\r\n\r\nexport default getColor;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport getColor from './getColor';\r\n\r\nfunction Statistics({title, stats}) {\r\n    return (\r\n        <section className={s.statistics}>\r\n            {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n            <ul className={s.statList} >\r\n                {stats.map((elem, i, array) => {\r\n                    const color = getColor();\r\n                    return <li\r\n                        className={s.item}\r\n                        key={elem.id}\r\n                        style={{\r\n                            backgroundColor: `rgb(${color})`,\r\n                            width: 100 / array.length + \"%\"\r\n                        }}\r\n                    >\r\n                        <span className={s.label}>{elem.label}</span>\r\n                        <span className={s.percentage}>{elem.percentage}%</span>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string,\r\n        percentage: PropTypes.number,\r\n    }))\r\n}\r\n\r\n\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\n\r\nfunction FriendListItem({avatar, name, isOnline}) {\r\n    return (\r\n        <>\r\n            <span\r\n                className={s.status}\r\n                style={{ backgroundColor: isOnline ? 'green' : 'red' }}></span>\r\n            <img className={s.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport s from './FriendList.module.css'\r\n\r\nfunction FriendList({friends}) {\r\n    return (\r\n        <ul className={s.friendList}>\r\n            {friends.map(item => (\r\n                <li\r\n                    className={s.item}\r\n                    key={item.id}\r\n                >\r\n                    <FriendListItem\r\n                        avatar={item.avatar}\r\n                        name={item.name}\r\n                        isOnline={item.isOnline}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n    }))\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nfunction TransactionHistory({items}) {\r\n    return (\r\n        <table className={s.transactionHistory}>\r\n            <thead>\r\n                <tr>\r\n                    <th>TYPE</th>\r\n                    <th>AMOUNT</th>\r\n                    <th>CURRENCY</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    items.map(item => (\r\n                        <tr key={item.id}>\r\n                            <td className={s.itemType}>{item.type}</td>\r\n                            <td className={s.itemAmount}>{item.amount}</td>\r\n                            <td className={s.itemCurrency}>{item.currency}</td>\r\n                        </tr>\r\n                    ))\r\n                }                \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default TransactionHistory;","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport Friendlist from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics\n        title=\"Upload stats\"\n        stats={statisticalData}\n      />\n      \n      <Statistics\n        stats={statisticalData}\n      />\n\n      <Friendlist\n        friends={friends}\n      />\n\n      <TransactionHistory\n        items={transactions}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}